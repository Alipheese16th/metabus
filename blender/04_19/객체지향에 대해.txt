객체지향에 대해

객체지향의 개념에 대해 설명해보겠습니다. 
OOP 라고도 하죠.
객체지향의 개념 이전에는 절차지향 프로그래밍만이 존재했습니다.
어떤 프로그램 (기능)을 만들때 하나의 소스코드 안에 모든 내용이 담겨있는 것이죠. 
모든 소스는 순서대로 실행이 될 뿐입니다.

문제는 소스의 양이 많아지면 난잡해지고 보기가 매우 힘들어집니다.
또한 하나의 기능을 수정하려고 해도 거기서 사용하는 부분들을 전부 수정해야 하는 문제가 생기죠.

객체 지향 프로그래밍은 이러한 문제점에서 벗어나서 
소스의 기능이나 변수들을 하나의 객체로 통합시켜 관리합니다.
가독성이나 유지보수 및 관리적인 측면에서 효율적입니다.

또한 객체를 반복적인 사용용도로만 한정하는 것이 아니라
오버라이딩을 통해 객체를 사용자에 입맛에 맞게 구현하여 적용이 가능합니다.

객체의 멤버 변수에 접근 권한을 제한적으로 지정하여 캡슐화를 구현할 수 있습니다.
직접적으로 값을 변경할 수 없게 만들어야 하는 로직에 사용됩니다.

여기까지 간단하게 설명해보았습니다.
감사합니다.