
지난 시간에 벽에 충돌시 불꽃이 튀는 이펙트까지 적용해봤다. 벽에 있는 스크립트인 removeBullet 스크립트에서 충돌 정보를 받아와서 normal 값에 따른 각도에 맞춰서 이펙트를 생성
 잘 작동됨.
 
근데 디스트로이를 따로 처리안했는데 왜 알아서 사라질까?
해당 이펙트 소스를 보면 자체적으로 스크립트를 내장하고있다.
5초뒤에 삭제되는 스크립트
 
 public class DecalDestroyer : MonoBehaviour {
	public float lifeTime = 5.0f;
	private IEnumerator Start()
	{
		yield return new WaitForSeconds(lifeTime);
		Destroy(gameObject);
	}
}

따라서 알아서 삭제되는것이다.


#
Time.time
내부적으로 시간을 정확히 계산해주는 변수
게임 시작이 0f부터 시작해서 1초당 1f씩 늘어난다.


# Collider

드럼통을 생성해서 총으로 쏴서 터트리는거 해보기

캡슐콜라이더를 적용해본다
콜라이더 컴포넌트에 왜 머터리얼 속성이 있을까? Material 이 왜 콜라이더에 있나
탄성, 마찰계수등 피지컬 머터리얼을 적용하기 위해 필요하다

또한 캡슐콜라이더가 방향이 수직으로 누워있다.
Direction 속성으로 조절

그러나 문제가 있다. 캡슐콜라이더는 끝쪽이 구형태라서 플레이어가 건드리면 부자연스러운 움직임을 보인다.
매쉬콜라이더를 적용하자. 단 불필요하게 폴리곤이 너무 많아지기때문에 Convex 를 체크해서 폴리곤을 줄이고 최적화한다.

총알이 드럼통을 뚫고 나가는 경우가 존재한다.
Bullet 의 RigidBody 에서 Collision Detection 을 Continuous Dynamic 으로 수정해야 충돌감지를 정확하게 적용할수 있음. 프레임별 이동거리가 너무 커서 중간계산이 필요했던것.


# parenting
드럼통에 BulletImpactMetalEffect 를 적용하면 총알이 부딪힐때 이펙트가 잘 적용은 되는데
문제는 허공에 그대로 떠있고 드럼통만 움직인다.
이펙트를 드럼통의 자식객체로 적용해줘야 따라 움직일것같다.

해당 이펙트 객체.transform.parent = 부모객체의 transform 으로 적용해줌


# 드럼통 폭발 구현.
총알을 일정횟수 맞으면 터지게 로직 구현해보기
드럼통 스크립트 BarrelCtrl

이펙트 객체를 Instantiate 생성.
각도는 Quaternion.identity 기본 각도값으로 설정

폭발 이펙트를 에셋에서 가져와서 적용. 반복 looping 효과는 체크해제. 한번만 실행
반복 해제는 프리펩 열어서 하이라키뷰의 모든 객체를 전부 해제해줘야함. 안에 객체가 좀 많다

이제 터졌을때 드럼통을 날려야하는데
드럼통의 tramsform.up 으로 날려버리면 현재 드럼통이 서있는것처럼 보이지만 로테이션값이 되어있기때문에 이상한 방향으로 날라간다.
Vector3.up 으로 월드좌표계의 윗방향으로 날리자.


# 드럼통 모양 변경
폭발하고 나면 모양이 바뀌어야한다.

매쉬데이터를 바꿔야한다. 매쉬데이터라는게 버텍스의 위치 모양 정보들임.
매쉬필터 컴포넌트에서 매쉬데이터를 바꾸면됨.

% 매터리얼은 피부, 표면의 색상과 질감 등임.
매쉬는 모양, 형체

MeshFilter 컴포넌트의 sharedMesh 변수값이 현재 매쉬데이터임. 이걸 덮어씌우면 메쉬데이터가 바뀜.

% 난수를 써서 매쉬데이터를 랜덤하게 변경하게 해보자. 부서진 드럼통 매쉬가 여러개임.
Random.Range 값으로 난수를 구할수있는데 정수가 파라미터일때는 ~이상 ~미만 범위이고 실수는 ~이상 ~이하 범위이다


# 드럼통 색상 어둡게
MeshRenderer.material.color 의 값은 머터리얼의 알베도 값이다. 이 값을 수정해서 어둡게 적용해줄수있음.


# 트럼통 폭발시 주변 드럼통 영향
레이어를 사용한다. 유니티에서 레이어는 포토샵처럼 생각하면 안됨. 각 객체들을 그룹으로 묶어서 관리하기 위한 기능임.

% overlapsphere
Physics 클래스의 메서드중 하나
주변 구형태 범위로 감지할수있음
힘의전달력이 거리별로 달라짐. (삼각함수)

레이어마스크를 파라미터로 넣어주면 해당하는 값
예를들어 8번레이어면 2의8승 값을 넣어줘야함.

% 비트연산자
<< left shift 
>> Right shift

& 비트곱
| 비트합

8번째 레이어와 10번째 레이어를 적용한다고 하면

(1 << 8) | (1 << 10)

또는 5 << 8

또는 1 << 8 + 1 << 10


%
AddExplosionForce (폭발력, 폭발하는위치, 폭발범위반지름, 위쪽(월드Y축 양방향)으로 들어주는 힘)

왜 위쪽으로 들어주는 힘이 필요하냐.
현실에서는 작용반작용 때문에 땅에서 폭발할경우 땅의 울림때문에 위로 튕겨져나가는 힘이 존재한다.
그러나 가상세계의 땅은 그런게 없기때문에 억지로 위로 띄워주는 힘을 추가해주어야함



# 드럼통에 파티클 적용해보기 (불, 연기)
프리펩스 에디트모드에서 빈게임오브젝트를 만들어서 원점을 잡아줌


% SmokeEffect
PreWarm 체크시 연기기둥이 바로생긴다. 이번엔 언체크 (천천히 올라옴)
Start speed 랜덤범위조절
Gravity Modifier -0.1




# 파티클은 시간이 지나면 없애줘야함

파티클들은 자식객체로 할당되게 해놨으니 자식객체들만 싹 삭제해버리면 되지않을까
GetComponentsInChildren 자식객체들의 컴포넌트들을 다 가져온다
근데 이 함수의 특징은 자기자신을 제일 먼저 가져옴. 즉 0번방에 자기자신이 있다.
그래서 자신까지 없애버렸음.





# 다음시간까지 과제
옆에 있는 드럼통이 터지면, 그 폭발력에 영향을 받은 드럼통은 다 연깃불이 붙고 시간이 지나면 폭발한다.
랜덤한 시간에 터져야함. 모든 드럼통이 한번에 터지면 오버플로우 발생함.
3초 ~ 9초 사이에 랜덤하게 터지게














