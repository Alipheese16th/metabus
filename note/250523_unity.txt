
드럼통 하나 터트리면 주변 폭발범위 전부 불붙이고 일정시간후 터트리는 예제
완료


# 사운드 처리
소리의 입력 및 출력

오디오소스라는 컴포넌트를 이용해서 소리를 낸다
오디오리스너라는 컴포넌트로 소리를 듣는다.

오디오를 듣는 주체는 누구인가? 플레이어? 아니다. 카메라가 사용자 주체이다.
메인 카메라를 보면 오디오 리스너 컴포넌트가 있다. 딸랑 한줄.
오디오 리스너는 수동적이기때문에 설정이 필요가 없다.
소리를 내는 주체를 설정하는것이다.

% 소리를 듣는 주체는 씬 내에서 하나만 있어야함

미니맵 만들때 카메라를 하늘위에 띄우는경우가 있는데 이럴때 카메라를 추가로 만들면 카메라에 오디오리스너가 자동생성 되기때문에 이런 오디오리스너는 삭제해줘야함.

% 카메라를 현재 보이는 화면으로 이동 ctrl + shift + F



# 사운드 포맷
일반적인 음악은 mp3 (이미지로 치면 jpg)

## 이미지의 발전

픽셀 색상을 전부 갖고있는 비트맵 방식의 이미지. bmp 파일 (오래된 방식 무겁다)

위 이미지를 압축 포맷한게 jpg
각 도트의 색상값중 공통 값을 모아서 별도의 팔레트로 모아둔것
jpg의 특징을 보면 압축률을 조절할수있다.
압축률을 높히면 화질이 깨질수있음. (팔레트 값이 작아짐. 화면에 보이는 색상 가짓수가 줄어듬)

사운드도 똑같다.
사운드는 파형. 진동 hz 로 나타나는데 음의 높낮이 주기다. 주기가 촘촘하면 고음. 반대는 저음.
위아래로 높낮이가 크면 볼륨이 크고 반대는 작음.

wav 파일이 기본임. jpg처럼 압축이 안되어있는 파일. DeCompress 할필요없음
우리가 조작할 파일은 압축이 안되어있는 리얼타임 싱크를 맞춰야 하기때문에 wav파일을 써야한다
단 짧은소리만 사용. 안그럼 용량이 너무커짐

긴 배경음은 ? 어떤 특정시점에 바로 적용할 필요가없는 사용환경에 쓰기때문에 압축포맷을 사용한다. 대표적으로 mp3


# 사운드 에셋을 보면 폭발,총탄 소리등이 있다. 이걸 적용해보자

원음을 녹음할때 아주 세밀한 주기로 녹음하면 퀄리티가 높아질것이다. 그것이 샘플링이라고 하는데
22050 Hz 라고 되어있는걸 보면 굉장히 세밀한 수준이다.

중요하지 않은 발소리 등은 5천 헤르츠 정도만 사용해도 괜찮다.
말소리 같이 중요한 소리는 14만 헤르츠 정도

% 채널. 소리를 내는 파형의 수. 
채널이 한개인경우 모노. 
채널이 두개인경우 스테레오.

그래서 입체사운드를 내는데는 기본적으로 5+1 (+1은 저음을 위한 우퍼(울림)소리) 

# 사운드 인스펙터뷰 핥아보기
Force To Mono : 모노 채널로 강제변경
Load Type : 메모리에서 읽어오는 형식.
  - Decompress On Load : 압축되지 않은 상태로 로딩 (메모리에 그대로 불러오기때문에 즉시 실행)
  - Compressed In Memory : 압축상태 (사운드 데이터가 클 경우 메모리에 압축상태로 집어넣고 출력할때만 압축해제. 단 딜레이가 발생할수 있음) 
  - Streaming : 메모리에서 읽어들이면서 바로 출력
Compression Format : 압축포맷
  - Vorbis : mp3같은 압축포맷
  - PCM : 퀄리티 위주라 압축률이 낮고 용량은 큼 
  - ADPCM : PCM 대비 압축률이 3.5배 높음. 대신 사운드가 조금 깨질수있음
  
 
m4총 소리를 보면 스테레오로 되어있는데 스테레오타입이라 용량도 크다.
어차피 총구에서 소리나게 할건데 카메라에서 듣는다고 왼쪽귀 오른쪽귀로 듣는게 별 차이가 없기때문에 모노 타입으로 바꿔준다.
그럼 imported Size 가 작아짐. 이런것도 최적화 하는게 좋음

총소리처럼 즉각적으로 소리가 나야하는건 파장을 보면 바로 왼쪽부터 시작하고있다.
장전소리는 파장이 좀 늦게 시작함. 이런 싱크를 잘 맞춰야함
여기서 싱크 맞추기 싫으면 사운드 편집 툴을 따로 사용해서 파장을 맞춰주면됨

# Audio Source 컴포넌트
AudioClip : 오디오파일 연결
Min Distance : 오디오 클립의 볼륨이 100% 전달되는 거리. 반지름
Max Distance : 아주 작게나마 들릴수 있는 최대 거리. 그래프로 보면 거리별 사운드 높이조절.
Play On Awake : 오브젝트가 생성되면 즉시 오디오재생
Loop : 반복재생
Pitch : 음의 고음 저음 조절. 파장의 간격 조절. 예를들어 자동차 엔진 소리 엑셀 단계별로 조절할때 사용

Volume Rolloff : 거리별 소리 크기
  - Logarithmic Rolloff : 자연계에서의 사운드 범위 그래프
  - Linear Rolloff : 직선 그래프
  - Custom Rolloff : 사용자 그래프

예를들어 개활지에서는 좀더 넓은 범위에서 들리기도함


#
총알에 적용하고 실행해보니까 총알오브젝트가 Destroy 가 되면서 사운드가 그대로 끊겨버림.
총구에 적용해야함
총이 달라지면 총소리도 바뀌기때문에 그게 맞음.

근데 이번 우리 예제에서는 총 모양만 바꾸면서 할거라서 그냥 플레이어에다 적용한다고 하심

총기발사 스크립트에서 인스펙터뷰에 노출되는 구조체를 하나 만들고 오디오클립 연결
[System.Serializable]
public struct PlayerSFX
{
	public AudioClip[] fire;
	public AudioClip[] reload;
}

% enum 열거형으로 쓸수있는 사용자 자료형 키워드
public enum WeaponType { 
	RIFLE, SHOTGUN
}
WeaponType 이라는 사용자 자료형은 enum형임.
WeaponType.RIFLE 은 0값을 갖고있음 그 다음은 1
아니면 따로 값을 지정해줄수있음

AudioSource 의 PlayOneShot 메서드로 매개변수로 오디오클립을 넣고 실행한다.

드럼통 폭발 사운드도 적용해보기.


#
AI >> AGI >> ASI
AI : 사람이 기준을 줘야함
AGI : 스스로 해결을 함
ASI : 사람이 불가능한 영역도 알아서 함


# NPC Non-Player Character

FSM : Finite State Machine

fsm기준으로 npc를 구성해볼것이다
생성 -> 순찰 -> 추격 -> 공격 -> 승리
            -> 피격 -> 사망



Enemy 에셋을 보면 애니메이션 타입이 generic으로 되어있는데 휴머노이드로 바꿔주기
여기서 잠깐 다시 복습

# Animation Type

1. Legacy : 구 방식 애니메이션
  - Animation 컴포넌트 사용

2. Generic / Humanoid : 메카님 방식의 애니메이션 
  - Animator 컴포넌트 사
  - Animator 컨트롤러 라는 객체를 만들어서 그걸로 적용


Avatar Definition : Create From This Model
아래 체크가 안되어있고 X로 되어있으면 휴머노이드로 사용할수 없는 구조라는것임

Configuration 눌러서 들어가보면
휴머노이드 본 구조가 보임.
실선테두리 원은 필수 본
점선테두리 원은 옵션 본

Mapping / Muscles & Settings 보면서 확인가능하다. 근육의 가동범위 등등


# mixamo 애니메이션 사이트
교육용으론 무료지만 상업용으론 유료일수있으니 조심히 사용

여기서 강남스타일 춤을 다운받자
적이 승리했을때 춤을 추게 적용해보자

애니메이션 클립의 Rig - Animation Type - Humanoid 로 마찬가지로 설정하고 
Enemy 모델을 적용하고 샘플 실행해보면 춤추는걸 볼수있다


#
Enemy 객체의 - mesh 데이터를 보면 Skinned Mesh Renderer 컴포넌트를 사용하고 있다.
Enemy 머터리얼에서 모바일 쉐이더를 사용중인데 standard 쉐이더를 적용해서 퀄리티를 높여줬다.

프로젝트뷰의 enemy 객체의 Rig탭 보면
Optimize Game Objects 체크하고 원하는 부위를 체크해서 중간과정을 생략하고 바로 웨폰홀더를 접근가능


이제 Enemy 의 애니메이터 컴포넌트를 제어할 애니메이터 컨트롤러를 생성하고 수정해보자.

Any State : 특정조건을 만족하면 언제든 실행되게
Entry
Exit : 애니메이션 종료























