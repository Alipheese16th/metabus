
# 비트 연산자

연산자	연산자의 기능
&	비트단위로 AND 연산을 한다.
|	비트단위로 OR 연산을 한다.
^	비트단위로 XOR 연산을 한다.
~	단항 연산자로서 피연자의 모든 비트를 반전시킨다.
<<	피연산자의 비트 열을 왼쪽으로 이동시킨다.
>>	피연산자의 비트 열을 오른쪽으로 이동시킨다.



----


캔버스를 만들어보자


# 가상공간을 렌더링하는 메모리와 
UI를 보여지게 하는 메모리 영역이 다름.

## UI 영역 : 스크린 스페이스
## 가상공간 영역 : 월드 스페이스


# EventSystem 오브젝트
UI는 사용자와 상호작용 하는 인터페이스
즉 사용자와 상호작용 할 이벤트 시스템임


## Rect Transform 컴포넌트
캔버스의 기본 트랜스폼 (삭제불가)

캔버스 하위의 모든 객체를 렉트 트랜스폼으로 만듬

모든 UI 객체의 모체가 된다.

Pos X , Y (중앙 센터 값)

(0, 0) 이 좌측하단 모서리값.
우측 상단이 Max 값.
가로가 X
상단이 Y
앞뒤가 Z

### 게임뷰의 화면 크기(해상도) 에 따라 UI 트랜스폼 크기도 달라진다


## 캔버스 컴포넌트 
렌더 모드 : 기본값 Screen Space - Overlay

1. Screen Space - Overlay
카메라 위에 오버레이 형식으로 나타난다는 뜻

2. Screen Space - Camera
Canvas 가 종속될 카메라를 지정 가능

3. World Space
가상공간에 렌더링됨.


## Canvas Scaler 
가상공간과 화면의 크기 비율
Reference Pixels Per Unit : 유닛당 픽셀


----

Canvas 오브젝트에 하위 옵젝 Panel 추가

# Panel
여러가지 메뉴를 모아주는 창틀같은 역할

## Rect Transform 
Canvas와 다르게 수정 가능
Left, Right, Top, Bottom 은 각 앵커와의 거리를 나타냄

### Anchors
앵커의 위치를 기준으로 패널의 위치값을 조절

앵커 프리셋에 따라 기준이 달라진다

## 앵커 프리셋
Shift 를 누르면서 프리셋 적용시 피봇 위치를 변경
Alt 누르면서 프리셋 적용시 매쉬 전체를 변경

오브젝트에서 피봇 이란 개념이 블렌더에서 오리진과 같음

위치,회전,스케일의 모든 중심축이 피봇

## 앵커 포인트
Min, Max 를 조정해가면서 4곳의 앵커를 조절하고
사이즈를 초기화하면
앵커대로 모양이 잡힘

앵커를 중앙기준으로 배치하고 위치를 옮기면
화면 해상도에 따라 위치가 붕뜨는경우가 있음.


----
#  이미지
Panel 하위 오브젝트로 이미지 추가

Image 컴포넌트의
Source Image 에서 이미지 열기

또한 multiple로 이미지 색상 더 겹치게 추가할수있음

Image Type 중 Filled 는 360도 등 방향에따라 이미지를 몇퍼센트 나타낼껀지 적용 가능

예를들어 롤 스킬 쿨타임 같은거 시계방향으로 쿨타임 나타낼수 있음

Clockwise 체크시 시계방향

가로방향으로 줄어드는건 체력 게이지





























